apiVersion: v1
kind: Service
metadata:
  name: elastic
  namespace: spring
  labels:
    app: support
    environment: demo
    role: logcenter
spec:
  selector:
    app: support
    environment: demo
    role: logcenter
  type: NodePort
  ports:
    - name: tcpinput
      port: 9610
      nodePort: 30961
    - name: logstashapi
      port: 9600
      nodePort: 30962
    - name: elasticsearch
      port: 9200
      nodePort: 30963
    - name: elasticsearch2
      port: 9300
      nodePort: 30694
#    - name: kibana
#      port: 5601
#      nodePort: 30960
--- 
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
    environment: demo
  name: elastic
spec:
  storageClassName: elastic
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/jfenghu/k8s/mnt/elastic/vol1" 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    type: local
    environment: demo
  name: elastic-claim
  namespace: spring
spec:
  storageClassName: elastic
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: elasticsearch
  namespace: spring
  labels:
    app: support
    environment: demo
    role: logcenter
spec:
  selector:
    matchLabels:
      app: support
      environment: demo
      role: logcenter
  replicas: 1
  template:
    metadata:
      name: elasticsearch
      namespace: spring
      labels:
        app: support
        environment: demo
        role: logcenter
    spec:
      containers:
        - name: logstash
          image: 'docker.elastic.co/logstash/logstash-oss:6.2.3'
          ports:
            - name: tcpinput
              containerPort: 9610 
          volumeMounts:
            - name: elastic-conf
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
        - name: elasticsearch
          image: 'docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.3'
          env:
            - name: 'discovery.type'
              value: 'single-node'
          ports:
            - name: web
              containerPort: 9200
            - name: node
              containerPort: 9300
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
            - name: elastic-conf
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
#        - name: kibana
#          image: 'docker.elastic.co/kibana/kibana-oss:6.2.3'
#          ports:
#            - name: web
#              containerPort: 5601
#          volumeMounts:
#            - name: elastic-conf
#              mountPath: /usr/share/kibana/config/kibana.yml
#              subPath: kibana.yml
      volumes:
        - name: elastic-conf
          configMap:
            name: elastic-conf
        - name: data
          persistentVolumeClaim:
            claimName: elastic-claim