apiVersion: v1
kind: Service
metadata:
  name: shardb
  namespace: mongodb
  labels:
    app: mongodb
    environment: demo
    role: shardb
spec:
  selector:
    app: mongodb
    environment: demo
    role: shardb
  clusterIP: None
  ports:
    - name: client
      port: 27018
      
--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: shardb-config
  namespace: mongodb
  labels:
    app: mongodb
    environment: demo
    role: shardb
data:
  shardb.cnf: |
    sharding:
      clusterRole: shardsvr
    replication:
      replSetName: shardb
    net:
      bindIp: 0.0.0.0
  initiateRS.js: |
    var cfg = {
        "_id":"shardb"
        ,shardb:true
        ,"members":[
            {"_id":0,"host":"shardb-0.shardb.mongodb.svc.cluster.local:27019"},
            {"_id":1,"host":"shardb-1.shardb.mongodb.svc.cluster.local:27019"},
            {"_id":2,"host":"shardb-2.shardb.mongodb.svc.cluster.local:27019"}
        ]
    };
    var error = rs.initiate(cfg);
    printjson(error);    
  
--- 
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
    environment: demo
  name: shardb
spec:
  storageClassName: mongodb
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/jfenghu/k8s/mnt/mongodb/shardb"
--- 
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
    environment: demo
  name: shardb-1
spec:
  storageClassName: mongodb
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/jfenghu/k8s/mnt/mongodb/shardb-1"
--- 
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
    environment: demo
  name: shardb-2
spec:
  storageClassName: mongodb
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/jfenghu/k8s/mnt/mongodb/shardb-2"
--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: shardb
  namespace: mongodb
  labels:
    app: mongodb
    environment: demo
    role: shardb
spec:
  selector:
    matchLabels:
      app: mongodb
      role: shardb
      environment: demo
  replicas: 3
  serviceName: shardb
  template:
    metadata:
      name: shardb
      labels:
        app: mongodb
        role: shardb
        environment: demo
    spec:
      volumes:
        - name: config
          configMap:
            name: shardb-config
      containers:
        - name: mongodb
          image: mongo:3.6
          command:
            - "mongod"
            - "--config=/config/shardb.cnf"
          ports:
            - name: client
              containerPort: 27018
          livenessProbe:
            exec:
              command: ["mongo", "--port", "27018", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command: ["mongo", "--port", "27018", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 10
            timeoutSeconds: 2
          volumeMounts:
            - name: config
              mountPath: /config
            - name: datadir
              mountPath: /data/db
              subPath: shardb
  volumeClaimTemplates:
    - metadata: 
        name: datadir
      spec:
        accessModes: 
          - ReadWriteOnce
        storageClassName: mongodb
        resources:
          requests:
            storage: 10Gi
    